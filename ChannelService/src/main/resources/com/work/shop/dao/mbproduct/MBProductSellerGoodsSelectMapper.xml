<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.work.shop.dao.mbproduct.MBProductSellerGoodsSelectMapper">
  <resultMap id="BaseResultMap" type="com.work.shop.bean.mbproduct.MBProductSellerGoodsSelect">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="seller_code" jdbcType="VARCHAR" property="sellerCode" />
    <result column="product_sys_code" jdbcType="VARCHAR" property="productSysCode" />
    <result column="product_code" jdbcType="VARCHAR" property="productCode" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_brief" jdbcType="VARCHAR" property="productBrief" />
    <result column="product_remark" jdbcType="VARCHAR" property="productRemark" />
    <result column="product_source" jdbcType="TINYINT" property="productSource" />
    <result column="sales_mode" jdbcType="TINYINT" property="salesMode" />
    <result column="sell_point" jdbcType="VARCHAR" property="sellPoint" />
    <result column="protect_price" jdbcType="DECIMAL" property="protectPrice" />
    <result column="cost_price" jdbcType="DECIMAL" property="costPrice" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="product_url" jdbcType="VARCHAR" property="productUrl" />
    <result column="product_video" jdbcType="VARCHAR" property="productVideo" />
    <result column="model_card" jdbcType="VARCHAR" property="modelCard" />
    <result column="size_picture" jdbcType="VARCHAR" property="sizePicture" />
    <result column="quasi_famous" jdbcType="VARCHAR" property="quasiFamous" />
    <result column="is_print_tag" jdbcType="TINYINT" property="isPrintTag" />
    <result column="output_date" jdbcType="DATE" property="outputDate" />
    <result column="plan_on_sale_date" jdbcType="TIMESTAMP" property="planOnSaleDate" />
    <result column="regulate_on_sale_date" jdbcType="TIMESTAMP" property="regulateOnSaleDate" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="last_update_user" jdbcType="VARCHAR" property="lastUpdateUser" />
    <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate" />
    <result column="brand_code" jdbcType="VARCHAR" property="brandCode" />
    <result column="brand_name" jdbcType="VARCHAR" property="brandName" />
    
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.work.shop.bean.mbproduct.MBProductSellerGoodsSelect">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="size_table" jdbcType="LONGVARCHAR" property="sizeTable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    psg.product_id, psg.category_id, psg.brand_id, psg.seller_code, psg.product_sys_code, psg.product_code, psg.product_name, 
    psg.product_brief, psg.product_remark, psg.product_source, psg.sales_mode, psg.sell_point, psg.protect_price, 
    psg.cost_price, psg.market_price, psg.keywords, psg.product_url, psg.product_video, psg.model_card, psg.size_picture, 
    psg.quasi_famous, psg.is_print_tag, psg.output_date, psg.plan_on_sale_date, psg.regulate_on_sale_date, 
    psg.status, psg.create_user, psg.create_date, psg.last_update_user, psg.last_update_date,brand_code,brand_name
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    size_table
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.work.shop.bean.mbproduct.MBProductSellerGoodsSelectExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product_seller_goods psg
    left join product_lib_brand plb on psg.brand_id=plb.brand_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="criteria.valid">
      <foreach collection="criteria.criteria" item="criterion">
        <if test="criterion.limitValue">
          limit ${criterion.value},${criterion.secondValue}
        </if>
      </foreach>
    </if>
  </select>
  
    <select id="countByExample" parameterType="com.work.shop.bean.mbproduct.MBProductSellerGoodsSelectExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from product_seller_goods psg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  
  <select id="selectChannelItem" parameterType="hashmap" resultType="com.work.shop.api.bean.ChannelApiGoods">
	SELECT
	    cg.`status` status,
	    cg.seller_code prodOrigin,
	    cg.product_name goodsName,
	    cg.channel_code shopCode,
	    pg.product_code goodsSn,
	    cg.protect_price price
	FROM
	    (
	        SELECT
	            product_sys_code,
	            `status`,
	            product_name,
	            seller_code,
	            channel_code,
	            protect_price
	        FROM
	            product_channel_goods
	        WHERE
	            channel_code = #{shopCode,jdbcType=VARCHAR}
	        <if test="status != null and status != ''" >
	        AND `status` = #{status,jdbcType=VARCHAR}
	        </if>
	    ) cg
	LEFT JOIN product_seller_goods pg ON cg.product_sys_code = pg.product_sys_code
	WHERE 1=1
	    <if test="itemNo != null and itemNo != ''" >
	        AND pg.product_code = #{itemNo,jdbcType=VARCHAR}
	    </if>
	GROUP BY pg.product_code
	LIMIT #{start},#{limits};
  </select>
  <select id="selectChannelItemCount" parameterType="hashmap" resultType="java.lang.Integer">
	SELECT
		count(1)
	FROM
	    (
	        SELECT
	            product_sys_code,
	            `status`,
	            product_name,
	            seller_code,
	            channel_code,
	            protect_price
	        FROM
	            product_channel_goods
	        WHERE
	            channel_code = #{shopCode, jdbcType=VARCHAR}
	        <if test="status != null and status != ''" >
	        AND `status` = #{status, jdbcType=VARCHAR}
	        </if>
	    ) cg
	LEFT JOIN product_seller_goods pg ON cg.product_sys_code = pg.product_sys_code
	WHERE 1=1
	    <if test="itemNo != null and itemNo != ''" >
	        AND pg.product_code = #{itemNo, jdbcType=VARCHAR}
	    </if>
  </select>
</mapper>