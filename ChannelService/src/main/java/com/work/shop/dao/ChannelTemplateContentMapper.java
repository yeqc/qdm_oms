package com.work.shop.dao;

import com.work.shop.invocation.ReadOnly;
import com.work.shop.invocation.Writer;
import com.work.shop.bean.ChannelTemplateContent;
import com.work.shop.bean.ChannelTemplateContentExample;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface ChannelTemplateContentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    @ReadOnly
    int countByExample(ChannelTemplateContentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    @Writer
    int deleteByExample(ChannelTemplateContentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    @Writer
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    @Writer
    int insert(ChannelTemplateContent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    @Writer
    int insertSelective(ChannelTemplateContent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    @ReadOnly
    List<ChannelTemplateContent> selectByExampleWithBLOBs(ChannelTemplateContentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    @ReadOnly
    List<ChannelTemplateContent> selectByExample(ChannelTemplateContentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    ChannelTemplateContent selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    @Writer
    int updateByExampleSelective(@Param("record") ChannelTemplateContent record, @Param("example") ChannelTemplateContentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    @Writer
    int updateByExampleWithBLOBs(@Param("record") ChannelTemplateContent record, @Param("example") ChannelTemplateContentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    @Writer
    int updateByExample(@Param("record") ChannelTemplateContent record, @Param("example") ChannelTemplateContentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    @Writer
    int updateByPrimaryKeySelective(ChannelTemplateContent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    @Writer
    int updateByPrimaryKeyWithBLOBs(ChannelTemplateContent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table channel_template_content
     *
     * @mbggenerated
     */
    @Writer
    int updateByPrimaryKey(ChannelTemplateContent record);
}