package com.work.shop.bean;

import java.util.ArrayList;
import java.util.List;

public class SystemRegionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table system_region
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table system_region
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table system_region
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table system_region
     *
     * @mbggenerated
     */
    public SystemRegionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table system_region
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table system_region
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table system_region
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table system_region
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table system_region
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table system_region
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table system_region
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table system_region
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table system_region
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table system_region
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table system_region
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        /**  
         * limit 
         * 
         */ 
        public Criteria limit(int offset, int len) {
            if (len==0 )
              throw new RuntimeException("len is 0");
            addCriterion("limit",offset,len,"null");
            return (Criteria) this;
        }

        /**  
         * top 
         * 
         */ 
        public Criteria limit(int len) {
            if (len==0 )
              throw new RuntimeException("len is 0");
            addCriterion("limit", 0, len, "null");
            return (Criteria) this;
        }

        public Criteria getLimitValue() {
            return (Criteria)criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRegionIdIsNull() {
            addCriterion("region_id is null");
            return (Criteria) this;
        }

        public Criteria andRegionIdIsNotNull() {
            addCriterion("region_id is not null");
            return (Criteria) this;
        }

        public Criteria andRegionIdEqualTo(Short value) {
            addCriterion("region_id =", value, "regionId");
            return (Criteria) this;
        }

        public Criteria andRegionIdNotEqualTo(Short value) {
            addCriterion("region_id <>", value, "regionId");
            return (Criteria) this;
        }

        public Criteria andRegionIdGreaterThan(Short value) {
            addCriterion("region_id >", value, "regionId");
            return (Criteria) this;
        }

        public Criteria andRegionIdGreaterThanOrEqualTo(Short value) {
            addCriterion("region_id >=", value, "regionId");
            return (Criteria) this;
        }

        public Criteria andRegionIdLessThan(Short value) {
            addCriterion("region_id <", value, "regionId");
            return (Criteria) this;
        }

        public Criteria andRegionIdLessThanOrEqualTo(Short value) {
            addCriterion("region_id <=", value, "regionId");
            return (Criteria) this;
        }

        public Criteria andRegionIdIn(List<Short> values) {
            addCriterion("region_id in", values, "regionId");
            return (Criteria) this;
        }

        public Criteria andRegionIdNotIn(List<Short> values) {
            addCriterion("region_id not in", values, "regionId");
            return (Criteria) this;
        }

        public Criteria andRegionIdBetween(Short value1, Short value2) {
            addCriterion("region_id between", value1, value2, "regionId");
            return (Criteria) this;
        }

        public Criteria andRegionIdNotBetween(Short value1, Short value2) {
            addCriterion("region_id not between", value1, value2, "regionId");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNull() {
            addCriterion("parent_id is null");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNotNull() {
            addCriterion("parent_id is not null");
            return (Criteria) this;
        }

        public Criteria andParentIdEqualTo(Short value) {
            addCriterion("parent_id =", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotEqualTo(Short value) {
            addCriterion("parent_id <>", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThan(Short value) {
            addCriterion("parent_id >", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThanOrEqualTo(Short value) {
            addCriterion("parent_id >=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThan(Short value) {
            addCriterion("parent_id <", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThanOrEqualTo(Short value) {
            addCriterion("parent_id <=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdIn(List<Short> values) {
            addCriterion("parent_id in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotIn(List<Short> values) {
            addCriterion("parent_id not in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdBetween(Short value1, Short value2) {
            addCriterion("parent_id between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotBetween(Short value1, Short value2) {
            addCriterion("parent_id not between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andRegionNameIsNull() {
            addCriterion("region_name is null");
            return (Criteria) this;
        }

        public Criteria andRegionNameIsNotNull() {
            addCriterion("region_name is not null");
            return (Criteria) this;
        }

        public Criteria andRegionNameEqualTo(String value) {
            addCriterion("region_name =", value, "regionName");
            return (Criteria) this;
        }

        public Criteria andRegionNameNotEqualTo(String value) {
            addCriterion("region_name <>", value, "regionName");
            return (Criteria) this;
        }

        public Criteria andRegionNameGreaterThan(String value) {
            addCriterion("region_name >", value, "regionName");
            return (Criteria) this;
        }

        public Criteria andRegionNameGreaterThanOrEqualTo(String value) {
            addCriterion("region_name >=", value, "regionName");
            return (Criteria) this;
        }

        public Criteria andRegionNameLessThan(String value) {
            addCriterion("region_name <", value, "regionName");
            return (Criteria) this;
        }

        public Criteria andRegionNameLessThanOrEqualTo(String value) {
            addCriterion("region_name <=", value, "regionName");
            return (Criteria) this;
        }

        public Criteria andRegionNameLike(String value) {
            addCriterion("region_name like", value, "regionName");
            return (Criteria) this;
        }

        public Criteria andRegionNameNotLike(String value) {
            addCriterion("region_name not like", value, "regionName");
            return (Criteria) this;
        }

        public Criteria andRegionNameIn(List<String> values) {
            addCriterion("region_name in", values, "regionName");
            return (Criteria) this;
        }

        public Criteria andRegionNameNotIn(List<String> values) {
            addCriterion("region_name not in", values, "regionName");
            return (Criteria) this;
        }

        public Criteria andRegionNameBetween(String value1, String value2) {
            addCriterion("region_name between", value1, value2, "regionName");
            return (Criteria) this;
        }

        public Criteria andRegionNameNotBetween(String value1, String value2) {
            addCriterion("region_name not between", value1, value2, "regionName");
            return (Criteria) this;
        }

        public Criteria andRegionTypeIsNull() {
            addCriterion("region_type is null");
            return (Criteria) this;
        }

        public Criteria andRegionTypeIsNotNull() {
            addCriterion("region_type is not null");
            return (Criteria) this;
        }

        public Criteria andRegionTypeEqualTo(Integer value) {
            addCriterion("region_type =", value, "regionType");
            return (Criteria) this;
        }

        public Criteria andRegionTypeNotEqualTo(Integer value) {
            addCriterion("region_type <>", value, "regionType");
            return (Criteria) this;
        }

        public Criteria andRegionTypeGreaterThan(Integer value) {
            addCriterion("region_type >", value, "regionType");
            return (Criteria) this;
        }

        public Criteria andRegionTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("region_type >=", value, "regionType");
            return (Criteria) this;
        }

        public Criteria andRegionTypeLessThan(Integer value) {
            addCriterion("region_type <", value, "regionType");
            return (Criteria) this;
        }

        public Criteria andRegionTypeLessThanOrEqualTo(Integer value) {
            addCriterion("region_type <=", value, "regionType");
            return (Criteria) this;
        }

        public Criteria andRegionTypeIn(List<Integer> values) {
            addCriterion("region_type in", values, "regionType");
            return (Criteria) this;
        }

        public Criteria andRegionTypeNotIn(List<Integer> values) {
            addCriterion("region_type not in", values, "regionType");
            return (Criteria) this;
        }

        public Criteria andRegionTypeBetween(Integer value1, Integer value2) {
            addCriterion("region_type between", value1, value2, "regionType");
            return (Criteria) this;
        }

        public Criteria andRegionTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("region_type not between", value1, value2, "regionType");
            return (Criteria) this;
        }

        public Criteria andAgencyIdIsNull() {
            addCriterion("agency_id is null");
            return (Criteria) this;
        }

        public Criteria andAgencyIdIsNotNull() {
            addCriterion("agency_id is not null");
            return (Criteria) this;
        }

        public Criteria andAgencyIdEqualTo(Short value) {
            addCriterion("agency_id =", value, "agencyId");
            return (Criteria) this;
        }

        public Criteria andAgencyIdNotEqualTo(Short value) {
            addCriterion("agency_id <>", value, "agencyId");
            return (Criteria) this;
        }

        public Criteria andAgencyIdGreaterThan(Short value) {
            addCriterion("agency_id >", value, "agencyId");
            return (Criteria) this;
        }

        public Criteria andAgencyIdGreaterThanOrEqualTo(Short value) {
            addCriterion("agency_id >=", value, "agencyId");
            return (Criteria) this;
        }

        public Criteria andAgencyIdLessThan(Short value) {
            addCriterion("agency_id <", value, "agencyId");
            return (Criteria) this;
        }

        public Criteria andAgencyIdLessThanOrEqualTo(Short value) {
            addCriterion("agency_id <=", value, "agencyId");
            return (Criteria) this;
        }

        public Criteria andAgencyIdIn(List<Short> values) {
            addCriterion("agency_id in", values, "agencyId");
            return (Criteria) this;
        }

        public Criteria andAgencyIdNotIn(List<Short> values) {
            addCriterion("agency_id not in", values, "agencyId");
            return (Criteria) this;
        }

        public Criteria andAgencyIdBetween(Short value1, Short value2) {
            addCriterion("agency_id between", value1, value2, "agencyId");
            return (Criteria) this;
        }

        public Criteria andAgencyIdNotBetween(Short value1, Short value2) {
            addCriterion("agency_id not between", value1, value2, "agencyId");
            return (Criteria) this;
        }

        public Criteria andShippingFeeIsNull() {
            addCriterion("shipping_fee is null");
            return (Criteria) this;
        }

        public Criteria andShippingFeeIsNotNull() {
            addCriterion("shipping_fee is not null");
            return (Criteria) this;
        }

        public Criteria andShippingFeeEqualTo(Float value) {
            addCriterion("shipping_fee =", value, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeNotEqualTo(Float value) {
            addCriterion("shipping_fee <>", value, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeGreaterThan(Float value) {
            addCriterion("shipping_fee >", value, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeGreaterThanOrEqualTo(Float value) {
            addCriterion("shipping_fee >=", value, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeLessThan(Float value) {
            addCriterion("shipping_fee <", value, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeLessThanOrEqualTo(Float value) {
            addCriterion("shipping_fee <=", value, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeIn(List<Float> values) {
            addCriterion("shipping_fee in", values, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeNotIn(List<Float> values) {
            addCriterion("shipping_fee not in", values, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeBetween(Float value1, Float value2) {
            addCriterion("shipping_fee between", value1, value2, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeNotBetween(Float value1, Float value2) {
            addCriterion("shipping_fee not between", value1, value2, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andEmsFeeIsNull() {
            addCriterion("ems_fee is null");
            return (Criteria) this;
        }

        public Criteria andEmsFeeIsNotNull() {
            addCriterion("ems_fee is not null");
            return (Criteria) this;
        }

        public Criteria andEmsFeeEqualTo(Float value) {
            addCriterion("ems_fee =", value, "emsFee");
            return (Criteria) this;
        }

        public Criteria andEmsFeeNotEqualTo(Float value) {
            addCriterion("ems_fee <>", value, "emsFee");
            return (Criteria) this;
        }

        public Criteria andEmsFeeGreaterThan(Float value) {
            addCriterion("ems_fee >", value, "emsFee");
            return (Criteria) this;
        }

        public Criteria andEmsFeeGreaterThanOrEqualTo(Float value) {
            addCriterion("ems_fee >=", value, "emsFee");
            return (Criteria) this;
        }

        public Criteria andEmsFeeLessThan(Float value) {
            addCriterion("ems_fee <", value, "emsFee");
            return (Criteria) this;
        }

        public Criteria andEmsFeeLessThanOrEqualTo(Float value) {
            addCriterion("ems_fee <=", value, "emsFee");
            return (Criteria) this;
        }

        public Criteria andEmsFeeIn(List<Float> values) {
            addCriterion("ems_fee in", values, "emsFee");
            return (Criteria) this;
        }

        public Criteria andEmsFeeNotIn(List<Float> values) {
            addCriterion("ems_fee not in", values, "emsFee");
            return (Criteria) this;
        }

        public Criteria andEmsFeeBetween(Float value1, Float value2) {
            addCriterion("ems_fee between", value1, value2, "emsFee");
            return (Criteria) this;
        }

        public Criteria andEmsFeeNotBetween(Float value1, Float value2) {
            addCriterion("ems_fee not between", value1, value2, "emsFee");
            return (Criteria) this;
        }

        public Criteria andCodFeeIsNull() {
            addCriterion("cod_fee is null");
            return (Criteria) this;
        }

        public Criteria andCodFeeIsNotNull() {
            addCriterion("cod_fee is not null");
            return (Criteria) this;
        }

        public Criteria andCodFeeEqualTo(Float value) {
            addCriterion("cod_fee =", value, "codFee");
            return (Criteria) this;
        }

        public Criteria andCodFeeNotEqualTo(Float value) {
            addCriterion("cod_fee <>", value, "codFee");
            return (Criteria) this;
        }

        public Criteria andCodFeeGreaterThan(Float value) {
            addCriterion("cod_fee >", value, "codFee");
            return (Criteria) this;
        }

        public Criteria andCodFeeGreaterThanOrEqualTo(Float value) {
            addCriterion("cod_fee >=", value, "codFee");
            return (Criteria) this;
        }

        public Criteria andCodFeeLessThan(Float value) {
            addCriterion("cod_fee <", value, "codFee");
            return (Criteria) this;
        }

        public Criteria andCodFeeLessThanOrEqualTo(Float value) {
            addCriterion("cod_fee <=", value, "codFee");
            return (Criteria) this;
        }

        public Criteria andCodFeeIn(List<Float> values) {
            addCriterion("cod_fee in", values, "codFee");
            return (Criteria) this;
        }

        public Criteria andCodFeeNotIn(List<Float> values) {
            addCriterion("cod_fee not in", values, "codFee");
            return (Criteria) this;
        }

        public Criteria andCodFeeBetween(Float value1, Float value2) {
            addCriterion("cod_fee between", value1, value2, "codFee");
            return (Criteria) this;
        }

        public Criteria andCodFeeNotBetween(Float value1, Float value2) {
            addCriterion("cod_fee not between", value1, value2, "codFee");
            return (Criteria) this;
        }

        public Criteria andIsCodIsNull() {
            addCriterion("is_cod is null");
            return (Criteria) this;
        }

        public Criteria andIsCodIsNotNull() {
            addCriterion("is_cod is not null");
            return (Criteria) this;
        }

        public Criteria andIsCodEqualTo(Boolean value) {
            addCriterion("is_cod =", value, "isCod");
            return (Criteria) this;
        }

        public Criteria andIsCodNotEqualTo(Boolean value) {
            addCriterion("is_cod <>", value, "isCod");
            return (Criteria) this;
        }

        public Criteria andIsCodGreaterThan(Boolean value) {
            addCriterion("is_cod >", value, "isCod");
            return (Criteria) this;
        }

        public Criteria andIsCodGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_cod >=", value, "isCod");
            return (Criteria) this;
        }

        public Criteria andIsCodLessThan(Boolean value) {
            addCriterion("is_cod <", value, "isCod");
            return (Criteria) this;
        }

        public Criteria andIsCodLessThanOrEqualTo(Boolean value) {
            addCriterion("is_cod <=", value, "isCod");
            return (Criteria) this;
        }

        public Criteria andIsCodIn(List<Boolean> values) {
            addCriterion("is_cod in", values, "isCod");
            return (Criteria) this;
        }

        public Criteria andIsCodNotIn(List<Boolean> values) {
            addCriterion("is_cod not in", values, "isCod");
            return (Criteria) this;
        }

        public Criteria andIsCodBetween(Boolean value1, Boolean value2) {
            addCriterion("is_cod between", value1, value2, "isCod");
            return (Criteria) this;
        }

        public Criteria andIsCodNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_cod not between", value1, value2, "isCod");
            return (Criteria) this;
        }

        public Criteria andCodPosIsNull() {
            addCriterion("cod_pos is null");
            return (Criteria) this;
        }

        public Criteria andCodPosIsNotNull() {
            addCriterion("cod_pos is not null");
            return (Criteria) this;
        }

        public Criteria andCodPosEqualTo(Boolean value) {
            addCriterion("cod_pos =", value, "codPos");
            return (Criteria) this;
        }

        public Criteria andCodPosNotEqualTo(Boolean value) {
            addCriterion("cod_pos <>", value, "codPos");
            return (Criteria) this;
        }

        public Criteria andCodPosGreaterThan(Boolean value) {
            addCriterion("cod_pos >", value, "codPos");
            return (Criteria) this;
        }

        public Criteria andCodPosGreaterThanOrEqualTo(Boolean value) {
            addCriterion("cod_pos >=", value, "codPos");
            return (Criteria) this;
        }

        public Criteria andCodPosLessThan(Boolean value) {
            addCriterion("cod_pos <", value, "codPos");
            return (Criteria) this;
        }

        public Criteria andCodPosLessThanOrEqualTo(Boolean value) {
            addCriterion("cod_pos <=", value, "codPos");
            return (Criteria) this;
        }

        public Criteria andCodPosIn(List<Boolean> values) {
            addCriterion("cod_pos in", values, "codPos");
            return (Criteria) this;
        }

        public Criteria andCodPosNotIn(List<Boolean> values) {
            addCriterion("cod_pos not in", values, "codPos");
            return (Criteria) this;
        }

        public Criteria andCodPosBetween(Boolean value1, Boolean value2) {
            addCriterion("cod_pos between", value1, value2, "codPos");
            return (Criteria) this;
        }

        public Criteria andCodPosNotBetween(Boolean value1, Boolean value2) {
            addCriterion("cod_pos not between", value1, value2, "codPos");
            return (Criteria) this;
        }

        public Criteria andIsCacIsNull() {
            addCriterion("is_cac is null");
            return (Criteria) this;
        }

        public Criteria andIsCacIsNotNull() {
            addCriterion("is_cac is not null");
            return (Criteria) this;
        }

        public Criteria andIsCacEqualTo(Boolean value) {
            addCriterion("is_cac =", value, "isCac");
            return (Criteria) this;
        }

        public Criteria andIsCacNotEqualTo(Boolean value) {
            addCriterion("is_cac <>", value, "isCac");
            return (Criteria) this;
        }

        public Criteria andIsCacGreaterThan(Boolean value) {
            addCriterion("is_cac >", value, "isCac");
            return (Criteria) this;
        }

        public Criteria andIsCacGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_cac >=", value, "isCac");
            return (Criteria) this;
        }

        public Criteria andIsCacLessThan(Boolean value) {
            addCriterion("is_cac <", value, "isCac");
            return (Criteria) this;
        }

        public Criteria andIsCacLessThanOrEqualTo(Boolean value) {
            addCriterion("is_cac <=", value, "isCac");
            return (Criteria) this;
        }

        public Criteria andIsCacIn(List<Boolean> values) {
            addCriterion("is_cac in", values, "isCac");
            return (Criteria) this;
        }

        public Criteria andIsCacNotIn(List<Boolean> values) {
            addCriterion("is_cac not in", values, "isCac");
            return (Criteria) this;
        }

        public Criteria andIsCacBetween(Boolean value1, Boolean value2) {
            addCriterion("is_cac between", value1, value2, "isCac");
            return (Criteria) this;
        }

        public Criteria andIsCacNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_cac not between", value1, value2, "isCac");
            return (Criteria) this;
        }

        public Criteria andIsVerifyTelIsNull() {
            addCriterion("is_verify_tel is null");
            return (Criteria) this;
        }

        public Criteria andIsVerifyTelIsNotNull() {
            addCriterion("is_verify_tel is not null");
            return (Criteria) this;
        }

        public Criteria andIsVerifyTelEqualTo(Boolean value) {
            addCriterion("is_verify_tel =", value, "isVerifyTel");
            return (Criteria) this;
        }

        public Criteria andIsVerifyTelNotEqualTo(Boolean value) {
            addCriterion("is_verify_tel <>", value, "isVerifyTel");
            return (Criteria) this;
        }

        public Criteria andIsVerifyTelGreaterThan(Boolean value) {
            addCriterion("is_verify_tel >", value, "isVerifyTel");
            return (Criteria) this;
        }

        public Criteria andIsVerifyTelGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_verify_tel >=", value, "isVerifyTel");
            return (Criteria) this;
        }

        public Criteria andIsVerifyTelLessThan(Boolean value) {
            addCriterion("is_verify_tel <", value, "isVerifyTel");
            return (Criteria) this;
        }

        public Criteria andIsVerifyTelLessThanOrEqualTo(Boolean value) {
            addCriterion("is_verify_tel <=", value, "isVerifyTel");
            return (Criteria) this;
        }

        public Criteria andIsVerifyTelIn(List<Boolean> values) {
            addCriterion("is_verify_tel in", values, "isVerifyTel");
            return (Criteria) this;
        }

        public Criteria andIsVerifyTelNotIn(List<Boolean> values) {
            addCriterion("is_verify_tel not in", values, "isVerifyTel");
            return (Criteria) this;
        }

        public Criteria andIsVerifyTelBetween(Boolean value1, Boolean value2) {
            addCriterion("is_verify_tel between", value1, value2, "isVerifyTel");
            return (Criteria) this;
        }

        public Criteria andIsVerifyTelNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_verify_tel not between", value1, value2, "isVerifyTel");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table system_region
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table system_region
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean limitValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isLimitValue() {
            return limitValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            if("limit".equals(condition))
              this.limitValue = true;
            else
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}