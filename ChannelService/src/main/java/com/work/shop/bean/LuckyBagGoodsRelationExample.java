package com.work.shop.bean;

import java.util.ArrayList;
import java.util.List;

public class LuckyBagGoodsRelationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    public LuckyBagGoodsRelationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        /**  
         * limit 
         * 
         */ 
        public Criteria limit(int offset, int len) {
            if (len==0 )
              throw new RuntimeException("len is 0");
            addCriterion("limit",offset,len,"null");
            return (Criteria) this;
        }

        /**  
         * top 
         * 
         */ 
        public Criteria limit(int len) {
            if (len==0 )
              throw new RuntimeException("len is 0");
            addCriterion("limit", 0, len, "null");
            return (Criteria) this;
        }

        public Criteria getLimitValue() {
            return (Criteria)criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuIsNull() {
            addCriterion("lucky_bag_sku is null");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuIsNotNull() {
            addCriterion("lucky_bag_sku is not null");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuEqualTo(String value) {
            addCriterion("lucky_bag_sku =", value, "luckyBagSku");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuNotEqualTo(String value) {
            addCriterion("lucky_bag_sku <>", value, "luckyBagSku");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuGreaterThan(String value) {
            addCriterion("lucky_bag_sku >", value, "luckyBagSku");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuGreaterThanOrEqualTo(String value) {
            addCriterion("lucky_bag_sku >=", value, "luckyBagSku");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuLessThan(String value) {
            addCriterion("lucky_bag_sku <", value, "luckyBagSku");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuLessThanOrEqualTo(String value) {
            addCriterion("lucky_bag_sku <=", value, "luckyBagSku");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuLike(String value) {
            addCriterion("lucky_bag_sku like", value, "luckyBagSku");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuNotLike(String value) {
            addCriterion("lucky_bag_sku not like", value, "luckyBagSku");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuIn(List<String> values) {
            addCriterion("lucky_bag_sku in", values, "luckyBagSku");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuNotIn(List<String> values) {
            addCriterion("lucky_bag_sku not in", values, "luckyBagSku");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuBetween(String value1, String value2) {
            addCriterion("lucky_bag_sku between", value1, value2, "luckyBagSku");
            return (Criteria) this;
        }

        public Criteria andLuckyBagSkuNotBetween(String value1, String value2) {
            addCriterion("lucky_bag_sku not between", value1, value2, "luckyBagSku");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeIsNull() {
            addCriterion("subset_code is null");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeIsNotNull() {
            addCriterion("subset_code is not null");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeEqualTo(String value) {
            addCriterion("subset_code =", value, "subsetCode");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeNotEqualTo(String value) {
            addCriterion("subset_code <>", value, "subsetCode");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeGreaterThan(String value) {
            addCriterion("subset_code >", value, "subsetCode");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeGreaterThanOrEqualTo(String value) {
            addCriterion("subset_code >=", value, "subsetCode");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeLessThan(String value) {
            addCriterion("subset_code <", value, "subsetCode");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeLessThanOrEqualTo(String value) {
            addCriterion("subset_code <=", value, "subsetCode");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeLike(String value) {
            addCriterion("subset_code like", value, "subsetCode");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeNotLike(String value) {
            addCriterion("subset_code not like", value, "subsetCode");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeIn(List<String> values) {
            addCriterion("subset_code in", values, "subsetCode");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeNotIn(List<String> values) {
            addCriterion("subset_code not in", values, "subsetCode");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeBetween(String value1, String value2) {
            addCriterion("subset_code between", value1, value2, "subsetCode");
            return (Criteria) this;
        }

        public Criteria andSubsetCodeNotBetween(String value1, String value2) {
            addCriterion("subset_code not between", value1, value2, "subsetCode");
            return (Criteria) this;
        }

        public Criteria andSkuIsNull() {
            addCriterion("sku is null");
            return (Criteria) this;
        }

        public Criteria andSkuIsNotNull() {
            addCriterion("sku is not null");
            return (Criteria) this;
        }

        public Criteria andSkuEqualTo(String value) {
            addCriterion("sku =", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuNotEqualTo(String value) {
            addCriterion("sku <>", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuGreaterThan(String value) {
            addCriterion("sku >", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuGreaterThanOrEqualTo(String value) {
            addCriterion("sku >=", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuLessThan(String value) {
            addCriterion("sku <", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuLessThanOrEqualTo(String value) {
            addCriterion("sku <=", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuLike(String value) {
            addCriterion("sku like", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuNotLike(String value) {
            addCriterion("sku not like", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuIn(List<String> values) {
            addCriterion("sku in", values, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuNotIn(List<String> values) {
            addCriterion("sku not in", values, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuBetween(String value1, String value2) {
            addCriterion("sku between", value1, value2, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuNotBetween(String value1, String value2) {
            addCriterion("sku not between", value1, value2, "sku");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lucky_bag_goods_relation
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean limitValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isLimitValue() {
            return limitValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            if("limit".equals(condition))
              this.limitValue = true;
            else
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}